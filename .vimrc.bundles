if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

" All the plugins are specified as full URLs because I can Cmd+click on them.
" Each plugin is followed up with it's settings, making individual plugins'
" settings easier to manage, i.e. no need to find which settigns belong to
" which plugin across .vimrc.
call plug#begin('~/.vim/plugged')

    Plug 'https://github.com/tpope/vim-fugitive.git'

    Plug 'https://github.com/jmcantrell/vim-virtualenv.git'

    Plug 'https://github.com/vim-airline/vim-airline.git' | Plug 'vim-airline/vim-airline-themes'
        " set statusline=[%{getcwd()}]\ %<%f%h%m%r\ [:b%n]\ %y\ %{fugitive#statusline()}\ %b\ ENC\:\ %{&encoding}\ TERM\:\ %{&termencoding}\ %l,%c%V\ %P
        let g:airline_theme='wombat'

    Plug 'https://github.com/ryanoasis/vim-devicons.git'

    Plug 'https://github.com/bagrat/vim-buffet.git'
        let g:buffet_powerline_separators = 1
        let g:buffet_show_index = 1
        let g:buffet_tab_icon = "\uf00a"
        let g:buffet_left_trunc_icon = "\uf0a8"
        let g:buffet_right_trunc_icon = "\uf0a9"
        noremap <Tab> :bn<CR>
        noremap <S-Tab> :bp<CR>
        noremap <Leader><Tab> :Bw<CR>
        noremap <Leader><S-Tab> :Bw!<CR>
        noremap <C-t> :tabnew split<CR>
        function! g:BuffetSetCustomColors()
            hi! BuffetCurrentBuffer cterm=NONE ctermbg=106 ctermfg=8 guibg=#b8bb26 guifg=#000000
            hi! BuffetTrunc cterm=bold ctermbg=66 ctermfg=8 guibg=#458588 guifg=#000000
            hi! BuffetBuffer cterm=NONE ctermbg=239 ctermfg=8 guibg=#504945 guifg=#000000
            hi! BuffetTab cterm=NONE ctermbg=66 ctermfg=8 guibg=#458588 guifg=#000000
            hi! BuffetActiveBuffer cterm=NONE ctermbg=10 ctermfg=239 guibg=#999999 guifg=#504945
        endfunction
        nmap <leader>1 <Plug>BuffetSwitch(1)
        nmap <leader>2 <Plug>BuffetSwitch(2)
        nmap <leader>3 <Plug>BuffetSwitch(3)
        nmap <leader>4 <Plug>BuffetSwitch(4)
        nmap <leader>5 <Plug>BuffetSwitch(5)
        nmap <leader>6 <Plug>BuffetSwitch(6)
        nmap <leader>7 <Plug>BuffetSwitch(7)
        nmap <leader>8 <Plug>BuffetSwitch(8)
        nmap <leader>9 <Plug>BuffetSwitch(9)
        nmap <leader>0 <Plug>BuffetSwitch(10)

    Plug 'https://github.com/junegunn/fzf.git', { 'do': { -> fzf#install() } } | Plug 'https://github.com/junegunn/fzf.vim.git'
        if exists('g:loaded_fugitive')
            nnoremap <expr> <C-p> fugitive#head() != '' ? ':GFiles --cached --others --exclude-standard<CR>' : ':Files<CR>'
            nnoremap <expr> <C-o> fugitive#head() != '' ? ':GFiles?<CR>' : ''
        else
            silent! !git rev-parse --is-inside-work-tree
            if v:shell_error == 0
              nnoremap <C-p> :GFiles --cached --others --exclude-standard<CR>
              nnoremap <C-o> :GFiles?<CR>
            else
              nnoremap <C-p> :Files<CR>
            endif
        endif
        nnoremap <leader>b :Buffers<CR>
        nnoremap <leader>f :BLines<CR>
        nnoremap <leader>ff :Lines<CR>

    Plug 'https://github.com/preservim/nerdtree.git', { 'on': 'NERDTreeToggle' }
        noremap <F2> :NERDTreeToggle <Return>

    Plug 'https://github.com/preservim/nerdcommenter.git'
        nmap <C-_> :call NERDComment("n","Invert") <CR>
        nmap <D-_> :call NERDComment("n","Invert") <CR>

    Plug 'https://github.com/fatih/vim-go.git', { 'do': ':GoUpdateBinaries', 'for': 'go' }
        autocmd FileType go nmap <leader>i <Plug>(go-info)
        autocmd FileType go nmap <leader>d <Plug>(go-def)
        autocmd FileType go nmap <leader>b :GoDefPop<CR>
        autocmd FileType go nmap <leader>s :GoSameIds<CR>
        autocmd FileType go nmap <leader>r :GoRename<CR>
        autocmd FileType go let g:go_auto_type_info = 1
        autocmd FileType go set updatetime=100

    Plug 'https://github.com/tpope/vim-surround.git'

    Plug 'https://github.com/vim-syntastic/syntastic.git'
        autocmd FileType php let g:syntastic_php_checkers = ['php']

    Plug 'https://github.com/plasticboy/vim-markdown.git'

    Plug 'https://github.com/dhruvasagar/vim-table-mode.git'
        autocmd FileType markdown :TableModeEnable
        autocmd FileType markdown let g:table_mode_corner="|"

    Plug 'https://github.com/vim-scripts/kwbdi.vim.git'

    Plug 'https://github.com/sheerun/vim-polyglot.git'

    Plug 'https://github.com/flazz/vim-colorschemes.git'

    if g:has_async
      Plug 'https://github.com/dense-analysis/ale.git'
    endif

    if filereadable(expand("~/.vimrc.bundles.local"))
      source ~/.vimrc.bundles.local
    endif


    " fholgado/minibufexpl
    " wincent/Command-T
    " ervandew/supertab
    " Chiel92/vim-autoformat
    " editorconfig/editorconfig-vim
    " stephpy/vim-php-cs-fixer
    " ctrlpvim/ctrlp.vim
    " mileszs/ack.vim
    " jwalton512/vim-blade
    " isRuslan/vim-es6
    " mxw/vim-jsx
    " zxqfl/tabnine-vim

call plug#end()
